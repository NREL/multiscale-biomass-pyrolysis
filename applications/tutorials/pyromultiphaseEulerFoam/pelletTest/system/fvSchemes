/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default     Euler;
}

gradSchemes
{
    default     Gauss linear;
}

divSchemes
{
    default                         none;

    "div\(phi,alpha.*\)"            Gauss vanLeer;
    "div\(phir,alpha.*\)"           Gauss vanLeer;

    "div\(alphaRhoPhi.*,U.*\)"      Gauss limitedLinearV 1;
    "div\(phi.*,U.*\)"              Gauss limitedLinearV 1;

    "div\(alphaRhoPhi.*,(h|e).*\)"  Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,K.*\)"      Gauss limitedLinear 1;
    "div\(alphaPhi.*,p\)"           Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,Y.*\)"              Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,\(p\|thermo:rho.*\)\)" Gauss limitedLinear 1;
    "div\(alphaRhoPhi.*,(k|epsilon).*\)"  Gauss limitedLinear 1;
    
    "div\(alphaPhi.*,f.*\)"                 Gauss upwind;
    "div\(fAlphaPhi.*,kappa.*\)"            Gauss linearUpwind limited;

    div((((alpha.gas*thermo:rho.gas)*nuEff.gas)*dev2(T(grad(U.gas))))) Gauss linear;
    "div\(\(\(\(alpha.*\*thermo:rho.*\)\*nuEff.*\)\*dev2\(T\(grad\(U.*\)\)\)\)\)" Gauss linear;
    
    div((((thermo:rho.particles*nut.particles)*dev2(T(grad(U.particles))))+(((thermo:rho.particles*lambda.particles)*div(phi.particles))*I)))  Gauss linear;
    div((((thermo:rho.bed*nut.bed)*dev2(T(grad(U.bed))))+(((thermo:rho.bed*lambda.bed)*div(phi.bed))*I)))  Gauss linear;
    
   "div\(alphaRhoPhi.*,Theta.*\)" Gauss limitedLinear 1;
}

laplacianSchemes
{
    default     Gauss linear uncorrected;
    bounded     Gauss linear uncorrected;
}

interpolationSchemes
{
    default     linear;
}

snGradSchemes
{
    default     uncorrected;
    bounded     uncorrected;
}

// ************************************************************************* //
